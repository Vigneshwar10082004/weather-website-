{"version":3,"file":"static/js/80.f41d547e.chunk.js","mappings":"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","sources":["components/Camera.js","components/Globe.js","components/Scroll.js","components/PlaceList.js","utils/trie.js","components/SearchBar.js","components/icons.jsx","utils/Countries.js","components/WeatherOverlay.js","App.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { PerspectiveCamera, OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\n\nlet a = 50;\nlet b = 70;\n\nconst Camera = (props) => {\n    const ref = useRef();\n    const [flag, setFlag] = useState(true);\n    const vec = new THREE.Vector3();\n    let width = window.innerWidth;\n\n    if (width < 800 && flag) {\n        a = 80;\n        b = 120;\n        setFlag(false);\n    } else if (width > 800 && !flag) {\n        a = 50;\n        b = 70;\n        setFlag(true);\n    }\n\n    useFrame(() => {\n        width = window.innerWidth;\n        if (props.lat) {\n            ref.current.position.lerp(\n                vec.set(\n                    (a -\n                        a *\n                            Math.pow(\n                                Math.sin(\n                                    THREE.MathUtils.degToRad(\n                                        Math.abs(props.lat)\n                                    )\n                                ),\n                                4\n                            )) *\n                        Math.sin(THREE.MathUtils.degToRad(props.lon)),\n                    (a +\n                        2 *\n                            Math.pow(\n                                Math.abs(\n                                    Math.sin(\n                                        THREE.MathUtils.degToRad(props.lat)\n                                    )\n                                ),\n                                1\n                            )) *\n                        Math.sin(THREE.MathUtils.degToRad(props.lat)),\n                    (a -\n                        a *\n                            Math.pow(\n                                Math.sin(\n                                    THREE.MathUtils.degToRad(\n                                        Math.abs(props.lat)\n                                    )\n                                ),\n                                4\n                            )) *\n                        Math.cos(THREE.MathUtils.degToRad(props.lon))\n                ),\n                0.05\n            );\n        }\n    });\n\n    return (\n        <>\n            <PerspectiveCamera\n                ref={ref}\n                makeDefault\n                position={[0, 0, b]}\n                fov={40}\n                onUpdate={(c) => c.updateProjectionMatrix()}\n            />\n            <OrbitControls target={[0, 0, 0]} enablePan={false} />\n        </>\n    );\n};\n\nexport default Camera;\n","import React, { useRef } from 'react';\nimport { useLoader } from '@react-three/fiber';\nimport { TextureLoader } from 'three/src/loaders/TextureLoader.js';\n\nimport * as THREE from 'three';\n\nconst Globe = (props) => {\n    const earthRef = useRef();\n    const cloudRef = useRef();\n    const colorMap = useLoader(TextureLoader, 'textures/8k_earth_daymap.jpg');\n    const normalMap = useLoader(\n        TextureLoader,\n        'textures/8k_earth_normal_map.jpg'\n    );\n    const specularMap = useLoader(\n        TextureLoader,\n        'textures/8k_earth_specular_map.jpg'\n    );\n    const cloudsMap = useLoader(TextureLoader, 'textures/8k_earth_clouds.jpg');\n\n    return (\n        <>\n            <mesh ref={cloudRef} scale={20}>\n                <sphereGeometry args={[1.002, 64, 64]} />\n                <meshPhongMaterial\n                    map={cloudsMap}\n                    opacity={0.12}\n                    depthWrite={true}\n                    transparent={true}\n                    side={THREE.DoubleSide}\n                />\n            </mesh>\n            <mesh\n                {...props}\n                ref={earthRef}\n                rotation={[0, 4.713, 0]}\n                scale={20}\n                receiveShadow={true}\n            >\n                <sphereGeometry args={[1, 64, 64, 0]} />\n                <meshPhongMaterial specularMap={specularMap} />\n                <meshStandardMaterial\n                    map={colorMap}\n                    normalMap={normalMap}\n                    roughness={0.7}\n                    metalness={0.4}\n                />\n            </mesh>\n        </>\n    );\n};\n\nexport default Globe;\n","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div\n            style={{\n                border: '0px solid white',\n                width: '350px',\n            }}\n        >\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;\n","import React from 'react';\n\nconst PlaceList = (props) => {\n    const placeArray = props.places.map((place) => {\n        return (\n            <div\n                className='place'\n                onClick={() => {\n                    props.handleSearch(place);\n                }}\n                key={place}\n            >\n                {place}\n            </div>\n        );\n    });\n\n    return <div className='place-list'>{placeArray}</div>;\n};\n\nexport default PlaceList;\n","// Uses trie to implement drop down functionality\nimport TrieSearch from 'trie-search';\nimport cityList from './Cities.json';\n\nconst helperSet = new Set();\nconst trie = new TrieSearch();\nfor (let country in cityList) {\n    for (let city of cityList[country]) {\n        city = city.toLowerCase();\n        if (helperSet.has(city)) continue;\n        helperSet.add(city);\n        city = city.split(' ');\n        const key = city.join('');\n        for (let i = 0; i < city.length; ++i) {\n            city[i] = city[i][0].toUpperCase() + city[i].slice(1);\n        }\n        const value = city.join(' ');\n        trie.map(key, value);\n    }\n}\n\nexport default trie;\n","import React, { useState, useEffect } from 'react';\nimport { FaSearchLocation } from 'react-icons/fa';\nimport Scroll from './Scroll';\nimport PlaceList from './PlaceList';\nimport trie from '../utils/trie';\n\nconst apikey = '1df7b707355fdfc7ad8570e5bb9310e4';\n\nconst SearchBar = (props) => {\n    const [text, setText] = useState('');\n    const [place, setPlace] = useState('');\n    const [miss, setMiss] = useState(false);\n    const [load, setLoad] = useState(false);\n\n    const handleInputChange = (event) => {\n        let city = event.target.value;\n        setText(city);\n        city = city.toLowerCase();\n        city = city.split(',');\n        city = city.join('');\n        city = city.split(' ');\n        city = city.join('');\n        setPlace(city);\n    };\n\n    const handleSearch = (place) => {\n        setLoad(true);\n        fetch(\n            `https://api.openweathermap.org/data/2.5/weather?q=${place}&appid=${apikey}`\n        )\n            .then((res) => {\n                if (res.ok) return res.json();\n                else if (res.status === 404) {\n                    setMiss(true);\n                    setLoad(false);\n                    throw new Error('Invalid');\n                }\n            })\n            .then((res) => {\n                props.setLat(res.coord.lat);\n                props.setLong(res.coord.lon);\n                return res;\n            })\n            .then((res) => {\n                props.setWeatherDetails(res);\n                setLoad(false);\n                return res;\n            })\n            .catch((error) => {\n                console.log(error);\n                setLoad(false);\n            });\n\n        setText('');\n        setPlace('');\n    };\n\n    document.onkeydown = (e) => {\n        if (e.key === 'Enter') {\n            handleSearch(text);\n        }\n    };\n\n    const filteredPlaces = trie.search(place).splice(0, 10);\n\n    useEffect(() => {\n        if (miss) setMiss(false);\n    }, [text]);\n\n    return (\n        <div className='search-container'>\n            <div className='search'>\n                <input\n                    className='search-bar'\n                    type='search'\n                    onChange={handleInputChange}\n                    value={text}\n                />\n                <div className='search-icon'>\n                    <FaSearchLocation\n                        color='#eee'\n                        onClick={handleSearch.bind(this, text)}\n                    />\n                </div>\n            </div>\n            {filteredPlaces.length ? (\n                <Scroll>\n                    <PlaceList\n                        places={filteredPlaces}\n                        setText={setText}\n                        handleSearch={handleSearch}\n                    />\n                </Scroll>\n            ) : (\n                <></>\n            )}\n            {miss && <div className='error'>Invalid Name: Try Again</div>}\n            {load && (\n                <div className='lds-ellipsis'>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SearchBar;\n","import '../utils/weather-icons.min.css';\n\nconst icons = {\n    '01d': <i className='wi wi-day-sunny'></i>,\n    '01n': <i className='wi wi-night-clear'></i>,\n    '02d': <i className='wi wi-day-cloudy'></i>,\n    '02n': <i className='wi wi-night-alt-cloudy'></i>,\n    '03d': <i className='wi wi-cloud'></i>,\n    '03n': <i className='wi wi-cloud'></i>,\n    '04d': <i className='wi wi-cloudy'></i>,\n    '04n': <i className='wi wi-cloudy'></i>,\n    '09d': <i className='wi wi-day-showers'></i>,\n    '09n': <i className='wi wi-night-showers'></i>,\n    '10d': <i className='wi wi-day-rain'></i>,\n    '10n': <i className='wi wi-night-rain'></i>,\n    '11d': <i className='wi wi-day-thunderstorm'></i>,\n    '11n': <i className='wi wi-night-thunderstorm'></i>,\n    '13d': <i className='wi wi-day-snow'></i>,\n    '13n': <i className='wi wi-night-snow'></i>,\n    '50d': <i className='wi wi-day-haze'></i>,\n    '50n': <i className='wi wi-night-fog'></i>,\n};\n\nexport default icons;\n","const country_names = {\n    AF: 'Afghanistan',\n    AL: 'Albania',\n    DZ: 'Algeria',\n    AD: 'AndorrA',\n    AO: 'Angola',\n    AI: 'Anguilla',\n    AQ: 'Antarctica',\n    AR: 'Argentina',\n    AM: 'Armenia',\n    AW: 'Aruba',\n    AU: 'Australia',\n    AT: 'Austria',\n    AZ: 'Azerbaijan',\n    BS: 'Bahamas',\n    BH: 'Bahrain',\n    BD: 'Bangladesh',\n    BB: 'Barbados',\n    BY: 'Belarus',\n    BE: 'Belgium',\n    BZ: 'Belize',\n    BJ: 'Benin',\n    BM: 'Bermuda',\n    BT: 'Bhutan',\n    BO: 'Bolivia',\n    BW: 'Botswana',\n    BR: 'Brazil',\n    BG: 'Bulgaria',\n    BI: 'Burundi',\n    KH: 'Cambodia',\n    CM: 'Cameroon',\n    CA: 'Canada',\n    TD: 'Chad',\n    CL: 'Chile',\n    CN: 'China',\n    CO: 'Colombia',\n    KM: 'Comoros',\n    CG: 'Congo',\n    CI: \"Cote D'Ivoire\",\n    HR: 'Croatia',\n    CU: 'Cuba',\n    CY: 'Cyprus',\n    DK: 'Denmark',\n    DJ: 'Djibouti',\n    DM: 'Dominica',\n    EC: 'Ecuador',\n    EG: 'Egypt',\n    ER: 'Eritrea',\n    EE: 'Estonia',\n    ET: 'Ethiopia',\n    FJ: 'Fiji',\n    FI: 'Finland',\n    FR: 'France',\n    GA: 'Gabon',\n    GM: 'Gambia',\n    GE: 'Georgia',\n    DE: 'Germany',\n    GH: 'Ghana',\n    GI: 'Gibraltar',\n    GR: 'Greece',\n    GL: 'Greenland',\n    GD: 'Grenada',\n    GP: 'Guadeloupe',\n    GU: 'Guam',\n    GT: 'Guatemala',\n    GG: 'Guernsey',\n    GN: 'Guinea',\n    GY: 'Guyana',\n    HT: 'Haiti',\n    HN: 'Honduras',\n    HU: 'Hungary',\n    IS: 'Iceland',\n    IN: 'India',\n    ID: 'Indonesia',\n    IQ: 'Iraq',\n    IE: 'Ireland',\n    IL: 'Israel',\n    IT: 'Italy',\n    JM: 'Jamaica',\n    JP: 'Japan',\n    JE: 'Jersey',\n    JO: 'Jordan',\n    KZ: 'Kazakhstan',\n    KE: 'Kenya',\n    KI: 'Kiribati',\n    KP: \"Korea, Democratic People'S Republic of\",\n    KW: 'Kuwait',\n    KG: 'Kyrgyzstan',\n    LA: \"Lao People'S Democratic Republic\",\n    LV: 'Latvia',\n    LB: 'Lebanon',\n    LS: 'Lesotho',\n    LR: 'Liberia',\n    LI: 'Liechtenstein',\n    LT: 'Lithuania',\n    LU: 'Luxembourg',\n    MO: 'Macao',\n    MG: 'Madagascar',\n    MW: 'Malawi',\n    MY: 'Malaysia',\n    MV: 'Maldives',\n    ML: 'Mali',\n    MT: 'Malta',\n    MQ: 'Martinique',\n    MR: 'Mauritania',\n    MU: 'Mauritius',\n    YT: 'Mayotte',\n    MX: 'Mexico',\n    MC: 'Monaco',\n    MN: 'Mongolia',\n    MS: 'Montserrat',\n    MA: 'Morocco',\n    MZ: 'Mozambique',\n    MM: 'Myanmar',\n    NA: 'Namibia',\n    NR: 'Nauru',\n    NP: 'Nepal',\n    NL: 'Netherlands',\n    NI: 'Nicaragua',\n    NE: 'Niger',\n    NG: 'Nigeria',\n    NU: 'Niue',\n    NO: 'Norway',\n    OM: 'Oman',\n    PK: 'Pakistan',\n    PW: 'Palau',\n    PA: 'Panama',\n    PY: 'Paraguay',\n    PE: 'Peru',\n    PH: 'Philippines',\n    PN: 'Pitcairn',\n    PL: 'Poland',\n    PT: 'Portugal',\n    QA: 'Qatar',\n    RE: 'Reunion',\n    RO: 'Romania',\n    RW: 'RWANDA',\n    WS: 'Samoa',\n    SN: 'Senegal',\n    SC: 'Seychelles',\n    SG: 'Singapore',\n    SK: 'Slovakia',\n    SI: 'Slovenia',\n    SO: 'Somalia',\n    ES: 'Spain',\n    SD: 'Sudan',\n    SR: 'Suriname',\n    SZ: 'Swaziland',\n    SE: 'Sweden',\n    CH: 'Switzerland',\n    TJ: 'Tajikistan',\n    TH: 'Thailand',\n    TG: 'Togo',\n    TK: 'Tokelau',\n    TO: 'Tonga',\n    TN: 'Tunisia',\n    TR: 'Turkey',\n    TM: 'Turkmenistan',\n    TV: 'Tuvalu',\n    UG: 'Uganda',\n    UA: 'Ukraine',\n    UY: 'Uruguay',\n    UZ: 'Uzbekistan',\n    VU: 'Vanuatu',\n    VE: 'Venezuela',\n    YE: 'Yemen',\n    ZM: 'Zambia',\n    ZW: 'Zimbabwe',\n    AX: 'Åland Islands',\n    AS: 'American Samoa',\n    AG: 'Antigua and Barbuda',\n    BA: 'Bosnia and Herzegovina',\n    BV: 'Bouvet Island',\n    IO: 'British Indian Ocean Territory',\n    BN: 'Brunei Darussalam',\n    BF: 'Burkina Faso',\n    CV: 'Cape Verde',\n    KY: 'Cayman Islands',\n    CF: 'Central African Republic',\n    CX: 'Christmas Island',\n    CC: 'Cocos (Keeling) Islands',\n    CD: 'Congo, The Democratic Republic of the',\n    CK: 'Cook Islands',\n    CR: 'Costa Rica',\n    CZ: 'Czech Republic',\n    DO: 'Dominican Republic',\n    SV: 'El Salvador',\n    GQ: 'Equatorial Guinea',\n    FK: 'Falkland Islands (Malvinas)',\n    FO: 'Faroe Islands',\n    GF: 'French Guiana',\n    PF: 'French Polynesia',\n    TF: 'French Southern Territories',\n    GW: 'Guinea-Bissau',\n    HM: 'Heard Island and Mcdonald Islands',\n    VA: 'Holy See (Vatican City State)',\n    HK: 'Hong Kong',\n    IR: 'Iran, Islamic Republic Of',\n    IM: 'Isle of Man',\n    KR: 'Korea, Republic of',\n    LY: 'Libyan Arab Jamahiriya',\n    MK: 'Macedonia, The Former Yugoslav Republic of',\n    MH: 'Marshall Islands',\n    FM: 'Micronesia, Federated States of',\n    MD: 'Moldova, Republic of',\n    AN: 'Netherlands Antilles',\n    NC: 'New Caledonia',\n    NZ: 'New Zealand',\n    NF: 'Norfolk Island',\n    MP: 'Northern Mariana Islands',\n    PS: 'Palestinian Territory, Occupied',\n    PG: 'Papua New Guinea',\n    PR: 'Puerto Rico',\n    RU: 'Russian Federation',\n    SH: 'Saint Helena',\n    KN: 'Saint Kitts and Nevis',\n    LC: 'Saint Lucia',\n    PM: 'Saint Pierre and Miquelon',\n    VC: 'Saint Vincent and the Grenadines',\n    SM: 'San Marino',\n    ST: 'Sao Tome and Principe',\n    SA: 'Saudi Arabia',\n    CS: 'Serbia and Montenegro',\n    SL: 'Sierra Leone',\n    SB: 'Solomon Islands',\n    ZA: 'South Africa',\n    GS: 'South Georgia and the South Sandwich Islands',\n    LK: 'Sri Lanka',\n    SJ: 'Svalbard and Jan Mayen',\n    SY: 'Syrian Arab Republic',\n    TW: 'Taiwan, Province of China',\n    TZ: 'Tanzania, United Republic of',\n    TL: 'Timor-Leste',\n    TT: 'Trinidad and Tobago',\n    TC: 'Turks and Caicos Islands',\n    AE: 'United Arab Emirates',\n    GB: 'United Kingdom',\n    US: 'United States',\n    UM: 'United States Minor Outlying Islands',\n    VN: 'Vietnam',\n    VG: 'Virgin Islands, British',\n    VI: 'Virgin Islands, U.S.',\n    WF: 'Wallis and Futuna',\n    EH: 'Western Sahara',\n};\n\nexport default country_names;\n","import React, { useEffect, useState } from 'react';\nimport icons from './icons.jsx';\nimport country_names from '../utils/Countries';\n\nconst days = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n];\n\nconst WeatherOverlay = (props) => {\n    const [icon, setIcon] = useState(null);\n    const [drop, setDrop] = useState(false);\n    const [details, setDetails] = useState(null);\n    const [day, setDay] = useState('');\n    const [date, setDate] = useState(null);\n    const [time, setTime] = useState(null);\n    const [dir, setDir] = useState('');\n\n    const handleMouseMove = (e, card) => {\n        const rect = card.getBoundingClientRect(),\n            x = e.clientX - rect.left,\n            y = e.clientY - rect.top;\n\n        card.style.setProperty('--mouse-x', `${x}px`);\n        card.style.setProperty('--mouse-y', `${y}px`);\n    };\n\n    const timeCorrect = (s) => {\n        if (s.length === 1) s = '0' + s;\n        else if (s.length === 0) s = '00';\n        return s;\n    };\n\n    useEffect(() => {\n        document.getElementsByClassName('cards')[0].onmousemove = (e) => {\n            for (const card of document.getElementsByClassName('card')) {\n                handleMouseMove(e, card);\n            }\n        };\n        document.getElementsByClassName('cards')[1].onmousemove = (e) => {\n            for (const card of document.getElementsByClassName('card')) {\n                handleMouseMove(e, card);\n            }\n        };\n    }, []);\n\n    useEffect(() => {\n        setDetails(props.weatherDetails);\n        if (details) {\n            setIcon(icons[details.weather[0].icon]);\n            setDrop(true);\n            const dir = details?.wind?.deg;\n            if (dir > 22.5 && dir < 67.5) setDir('NE');\n            else if (dir > 67.5 && dir < 112.5) setDir('E');\n            else if (dir > 112.5 && dir < 167.5) setDir('SE');\n            else if (dir > 167.5 && dir < 202.5) setDir('S');\n            else if (dir > 202.5 && dir < 247.5) setDir('SW');\n            else if (dir > 247.5 && dir < 292.5) setDir('W');\n            else if (dir > 292.5 && dir < 337.5) setDir('NW');\n            else setDir('N');\n        }\n    }, [props.weatherDetails, details]);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if (details) {\n                const date = new Date();\n                const localTime = date.getTime();\n                const localOffset = date.getTimezoneOffset() * 60000;\n                const utc = localTime + localOffset;\n                const atlanta = utc + 1000 * details.timezone;\n                const new_date = new Date(atlanta);\n                let h = new_date.getHours().toString();\n                let m = new_date.getMinutes().toString();\n                let s = new_date.getSeconds().toString();\n                h = timeCorrect(h);\n                m = timeCorrect(m);\n                s = timeCorrect(s);\n                const settime = h + ':' + m + ':' + s;\n                setTime(settime);\n                setDay(days[new_date.getDay()]);\n                const setdate =\n                    new_date.getDate().toString() +\n                    '/' +\n                    (new_date.getMonth() + 1).toString() +\n                    '/' +\n                    new_date.getFullYear().toString().slice(2);\n                setDate(setdate);\n            }\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [details]);\n\n    return (\n        <div className='weather-overlay'>\n            <div className='card-container'>\n                <div className='cards'>\n                    <div className='card'>\n                        <div className='card-content'>\n                            <div className='big-text'>\n                                {Math.round(details?.main?.temp - 273.15)}°C\n                            </div>\n                            <div className='mid-text line'>{details?.name}</div>\n                            <div className='mid-text'>\n                                {country_names[details?.sys?.country]}\n                            </div>\n                        </div>\n                    </div>\n                    <div className='card'>\n                        <div className='card-content'>\n                            <div className='temp-text'>\n                                {Math.round(details?.main?.feels_like - 273.15)}\n                                °C\n                            </div>\n                            <div className='mid-text'>Feels Like</div>\n                            <br />\n                            <div className='temp-text'>\n                                {details?.main?.humidity}%\n                            </div>\n                            <div className='mid-text'>Humidity</div>\n                        </div>\n                    </div>\n                    <div className='card'>\n                        <div className='card-content'>\n                            <div className='temp-text'>\n                                {Math.round(details?.main?.temp_max - 273.15)}\n                                °C\n                            </div>\n                            <div className='mid-text'>Max Now</div>\n                            <br />\n                            <div className='temp-text'>\n                                {Math.round(details?.main?.temp_min - 273.15)}\n                                °C\n                            </div>\n                            <div className='mid-text'>Min Now</div>\n                        </div>\n                    </div>\n                </div>\n                <div className='cards'>\n                    <div className='card'>\n                        <div className='card-content'>\n                            <div className='icon'>{icon}</div>\n                            <div className='mid-text'>\n                                {details?.weather[0]?.main}\n                            </div>\n                        </div>\n                    </div>\n                    <div className='card'>\n                        <div className='card-content'>\n                            <div className='temp-text'>{time}</div>\n                            <div className='mid-text'>hh:mm:ss</div>\n                            <br />\n                            <div className='temp-text'>{date}</div>\n                            <div className='mid-text'>{day}</div>\n                        </div>\n                    </div>\n                    <div className='card'>\n                        <div className='card-content'>\n                            <div className='temp-text'>\n                                {details?.wind?.speed}\n                                {dir}\n                            </div>\n                            <div className='mid-text'>Wind Speed</div>\n                            <br />\n                            <div className='temp-text'>\n                                {details?.visibility / 1000}km\n                            </div>\n                            <div className='mid-text'>Visibility</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {drop && (\n                <div className='loc-drop'>\n                    <div className='circle1'></div>\n                    <div className='circle2'></div>\n                    <div className='circle3'></div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default WeatherOverlay;\n","import React, { Suspense, useRef, useState, useEffect } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { Stars } from '@react-three/drei';\nimport Camera from './components/Camera';\nimport Globe from './components/Globe';\nimport Load from './components/Load';\nimport SearchBar from './components/SearchBar';\nimport WeatherOverlay from './components/WeatherOverlay';\nimport * as THREE from 'three';\nimport './App.css';\n\nconst Scene = (props) => {\n    const lightRef = useRef();\n    const date = new Date();\n    let dayOfYear = Math.floor(\n        (date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24\n    );\n    if (dayOfYear > 172) {\n        dayOfYear -= (172 + 356) / 2;\n        dayOfYear *= -1;\n    } else {\n        dayOfYear -= 172 / 2;\n    }\n    let lightAxisAngle = dayOfYear / 5.6275;\n    // 172 until summer solstice\n    // 356 until winter solstice\n    // can devise function like x-172/2 % 172\n    // tan (x/10) = 23.5\n    // x=15.282\n    // 86 <- Max\n    // 86 -> 15.282 mapping\n    // 5.6275 ratio\n\n    // degree calculated from seconds of Greenwich time and placing sun overhead\n\n    useFrame(() => {\n        const time = new Date();\n        const seconds =\n            3600 * time.getUTCHours() +\n            60 * time.getUTCMinutes() +\n            time.getUTCSeconds();\n        const degree = ((seconds - 43200) / 86400) * 360;\n        if (lightRef.current) {\n            lightRef.current.position.x =\n                -10 * Math.sin(THREE.MathUtils.degToRad(degree));\n            lightRef.current.position.z =\n                10 * Math.cos(THREE.MathUtils.degToRad(degree));\n        }\n    });\n    return (\n        <group>\n            <Stars />\n            <ambientLight intensity={0.4} />\n            <directionalLight\n                ref={lightRef}\n                position={[10, lightAxisAngle, 0]}\n                intensity={1}\n            />\n            <Camera {...props} />\n            <Globe position={[0, 0, 0]} />\n        </group>\n    );\n};\n\nconst App = () => {\n    const [lat, setLat] = useState(null);\n    const [long, setLong] = useState(null);\n    const [weatherDetails, setWeatherDetails] = useState(null);\n\n    return (\n        <div className='main'>\n            <SearchBar\n                lat={lat}\n                lon={long}\n                setLat={setLat}\n                setLong={setLong}\n                setWeatherDetails={setWeatherDetails}\n            />\n\n            {weatherDetails === null ? (\n                <div className='intro'>EARTH</div>\n            ) : (\n                <></>\n            )}\n\n            <Suspense fallback={<Load desc={'Earth'} />}>\n                <Canvas style={{ position: 'absolute' }}>\n                    <Scene lat={lat} lon={long} />\n                </Canvas>\n            </Suspense>\n\n            {weatherDetails !== null ? (\n                <WeatherOverlay weatherDetails={weatherDetails} />\n            ) : (\n                <></>\n            )}\n        </div>\n    );\n};\n\nexport default App;\n"],"names":["a","b","props","ref","useRef","useState","flag","setFlag","vec","THREE","width","window","innerWidth","useFrame","lat","current","position","lerp","set","Math","pow","sin","abs","lon","cos","PerspectiveCamera","makeDefault","fov","onUpdate","c","updateProjectionMatrix","OrbitControls","target","enablePan","earthRef","cloudRef","colorMap","useLoader","TextureLoader","normalMap","specularMap","cloudsMap","scale","args","map","opacity","depthWrite","transparent","side","rotation","receiveShadow","roughness","metalness","style","border","children","placeArray","places","place","className","onClick","handleSearch","helperSet","Set","trie","TrieSearch","country","cityList","city","toLowerCase","has","add","key","split","join","i","length","toUpperCase","slice","value","text","setText","setPlace","miss","setMiss","load","setLoad","fetch","then","res","ok","json","status","Error","setLat","coord","setLong","setWeatherDetails","catch","error","console","log","document","onkeydown","e","filteredPlaces","splice","useEffect","type","onChange","event","color","bind","AF","AL","DZ","AD","AO","AI","AQ","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BW","BR","BG","BI","KH","CM","CA","TD","CL","CN","CO","KM","CG","CI","HR","CU","CY","DK","DJ","DM","EC","EG","ER","EE","ET","FJ","FI","FR","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GG","GN","GY","HT","HN","HU","IS","IN","ID","IQ","IE","IL","IT","JM","JP","JE","JO","KZ","KE","KI","KP","KW","KG","LA","LV","LB","LS","LR","LI","LT","LU","MO","MG","MW","MY","MV","ML","MT","MQ","MR","MU","YT","MX","MC","MN","MS","MA","MZ","MM","NA","NR","NP","NL","NI","NE","NG","NU","NO","OM","PK","PW","PA","PY","PE","PH","PN","PL","PT","QA","RE","RO","RW","WS","SN","SC","SG","SK","SI","SO","ES","SD","SR","SZ","SE","CH","TJ","TH","TG","TK","TO","TN","TR","TM","TV","UG","UA","UY","UZ","VU","VE","YE","ZM","ZW","AX","AS","AG","BA","BV","IO","BN","BF","CV","KY","CF","CX","CC","CD","CK","CR","CZ","DO","SV","GQ","FK","FO","GF","PF","TF","GW","HM","VA","HK","IR","IM","KR","LY","MK","MH","FM","MD","AN","NC","NZ","NF","MP","PS","PG","PR","RU","SH","KN","LC","PM","VC","SM","ST","SA","CS","SL","SB","ZA","GS","LK","SJ","SY","TW","TZ","TL","TT","TC","AE","GB","US","UM","VN","VG","VI","WF","EH","days","icon","setIcon","drop","setDrop","details","setDetails","day","setDay","date","setDate","time","setTime","dir","setDir","handleMouseMove","card","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","setProperty","timeCorrect","s","getElementsByClassName","onmousemove","weatherDetails","icons","weather","wind","deg","interval","setInterval","Date","atlanta","getTime","getTimezoneOffset","timezone","new_date","h","getHours","toString","m","getMinutes","getSeconds","getDay","setdate","getDate","getMonth","getFullYear","clearInterval","round","main","temp","name","country_names","sys","feels_like","humidity","temp_max","temp_min","speed","visibility","Scene","lightRef","dayOfYear","floor","lightAxisAngle","degree","getUTCHours","getUTCMinutes","getUTCSeconds","z","Stars","intensity","long","Suspense","fallback","Load","desc"],"sourceRoot":""}